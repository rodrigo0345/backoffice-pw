import{R as d}from"./RepositoryInterface-TDgCEybl.js";import{F as u}from"./FoodModelRepository-EukNaaBv.js";import{I as f,a as g}from"./SuggestionService-v8Bd-oI4.js";import{J as y,a as w}from"./UserService-o9p5zFJ_.js";import{M as R}from"./MaterialRepository-CkyeY5IP.js";import{G as m,g as I,s as k}from"./config-Dvl3g2xv.js";class S{constructor(t){this.repo=new d,this.localStorage=window.localStorage,this.prefix="food-list-",this.last_id="food_list_last_id"}create(t){return this.repo.create(t,this.localStorage,this.prefix,this.last_id)}update(t,e){return this.repo.update(t,e,this.localStorage,this.prefix)}delete(t){return this.repo.delete(t,this.localStorage,this.prefix)}find(t){return this.repo.find(t,this.localStorage,this.prefix)}all(t){return this.repo.all(t,this.localStorage,this.prefix)}}class v{constructor(t){this.repo=new d,this.localStorage=window.localStorage,this.prefix="media-",this.last_id="media_last_id"}create(t){return this.repo.create(t,this.localStorage,this.prefix,this.last_id)}update(t,e){return this.repo.update(t,e,this.localStorage,this.prefix)}delete(t){return this.repo.delete(t,this.localStorage,this.prefix)}find(t){return this.repo.find(t,this.localStorage,this.prefix)}all(t){return this.repo.all(t,this.localStorage,this.prefix)}}class x{constructor(t){this.localStorage=window.localStorage,this.prefix="order-",this.last_id="order_last_id",this.repo=new d}checkIfAnyOrderArrived(){const t=this.all({}),e=new Date;t.forEach(o=>{o.status==="completed"||o.isDeleted===!0||o.status==="cancelled"||new Date(o.deliveryDate).getTime()<=e.getTime()&&this.update(o.id,{...o,status:"completed"})})}create(t){return this.checkIfAnyOrderArrived(),this.repo.create(t,this.localStorage,this.prefix,this.last_id)}update(t,e){return this.repo.update(t,e,this.localStorage,this.prefix)}delete(t){return this.checkIfAnyOrderArrived(),this.repo.delete(t,this.localStorage,this.prefix)}find(t){return this.checkIfAnyOrderArrived(),this.repo.find(t,this.localStorage,this.prefix)}all(t){return this.repo.all(t,this.localStorage,this.prefix)}}class L{constructor(t){this.localStorage=window.localStorage,this.prefix="working_in-",this.last_id="working_in_last_id",this.repo=new d}create(t){return this.repo.create(t,this.localStorage,this.prefix,this.last_id)}update(t,e){return this.repo.update(t,e,this.localStorage,this.prefix)}delete(t){return this.repo.delete(t,this.localStorage,this.prefix)}find(t){return this.repo.find(t,this.localStorage,this.prefix)}all(t){return this.repo.all(t,this.localStorage,this.prefix)}}class j{constructor(){this.initiativeRepository=new f,this.suggestionRepository=new g,this.workingInRepository=new L,this.jobRepository=new y,this.usersRepository=new w,this.orderRepository=new x,this.foodListRepository=new S,this.foodRepository=new u,this.materialsRepository=new R,this.mediaModelRepository=new v}createInitiative(t){return this.initiativeRepository.create(t)}createInitiativeFromSuggestion(t){const e=this.suggestionRepository.find({id:t.sugestionId});if(!e)throw new Error("Suggestion not found.");return e.isApproved=!0,this.suggestionRepository.update(e.id,e),t.createdOn=new Date,t.isDeleted=!1,t.sugestionId=e.id,t.eventType=e.eventType,t.local=t.local.trim()===""?e.local:t.local,t.maxParticipants=t.maxParticipants||e.numParticipants,t.minParticipants=0,t.status="pending",this.initiativeRepository.create(t)}deleteInitiative(t){return this.initiativeRepository.delete(t)}updateInitiative(t,e){return this.initiativeRepository.update(t,e)}getAllInitiatives(t){return this.orderRepository.checkIfAnyOrderArrived(),this.initiativeRepository.all(t)}addWorker(t,e){if(!this.initiativeRepository.find({id:t}))throw new Error("Initiative not found.");const r=this.usersRepository.find({id:e});if(!r)throw new Error("User not found.");if(r.jobId===0)throw new Error("User does not have a job set yet.");if(!this.jobRepository.find({id:r.jobId})||r.role!=="worker")throw new Error("User is not a worker or does not have a job set yet.");if(this.workingInRepository.find({initiativeId:t,userId:e}))throw new Error("Worker already working here.");const s={id:0,initiativeId:t,userId:e,isDeleted:!1,isPresent:!1};if(!this.workingInRepository.create(s))throw new Error("Error adding worker.");return r}removeWorker(t,e){const o=this.workingInRepository.find({initiativeId:t,userId:e});return o?this.workingInRepository.delete(o.id):!1}getCalculatedCost(t){if(!this.initiativeRepository.find({id:t}))throw new Error("Initiative not found.");const o=this.getStaffCost(t),i=this.orderRepository.all({initiativeId:t}).filter(s=>s.status!=="cancelled").reduce((s,a)=>s+a.price,0),n=this.getMaterialCost(t);return o+i+n}getOrders(t,e=!0){if(!this.initiativeRepository.find({id:t}))throw new Error("Initiative not found.");let r=this.orderRepository.all({initiativeId:t,isDeleted:!1});return e&&(r=r.filter(i=>i.status!=="cancelled")),r}getOrder(t,e){return this.orderRepository.find({id:t,initiativeId:e})}getFoodFromOrder(t){return this.foodListRepository.all({orderId:t}).map(o=>{const r=this.foodRepository.find({id:o.foodId});if(!r)throw new Error("Food not found.");return r})}isWorkerPresent(t,e){const o=this.workingInRepository.find({initiativeId:t,userId:e});return o?o.isPresent:!1}getAvailableFood(t){if(!this.initiativeRepository.find({id:t}))throw new Error("Initiative not found.");return this.orderRepository.all({initiativeId:t}).filter(r=>r.status==="completed").map(r=>this.foodListRepository.all({orderId:r.id})).flat().map(r=>this.foodRepository.find({id:r.foodId})).filter(r=>r!==null)}createOrder(t,e){const o=this.orderRepository.create(t);return e.forEach(r=>{this.foodListRepository.create({id:0,orderId:o.id,foodId:r.food.id,quantity:r.quantity})}),o}getRiskLevel(t){const e=this.orderRepository.all({initiativeId:t,isDeleted:!1}).filter(r=>r.status!=="cancelled");return e.reduce((r,i)=>{const n=this.foodListRepository.all({orderId:i.id}),s=n.length,a=n.reduce((p,c)=>{const h=this.foodRepository.find({id:c.foodId});return console.log({food:h}),h?p+h.risk:p},0);return console.log({foodListRisk:a,foodNumber:s,orderList:e.length}),r+a/s/e.length},0)}getStaffCost(t){return this.workingInRepository.all({initiativeId:t}).reduce((r,i)=>{const n=this.usersRepository.find({id:i.userId});if(!n)return r;const s=this.jobRepository.find({id:n.jobId});return s?r+s.costPerHour:r},0)}getUsedMaterials(t){return this.materialsRepository.all({initiativeId:t})}addMaterial(t){return this.materialsRepository.create(t)}getMaterialCost(t){return this.materialsRepository.all({initiativeId:t}).reduce((o,r)=>o+r.price*r.quantity,0)}getWorkers(t){return this.workingInRepository.all({initiativeId:t}).map(o=>this.usersRepository.find({id:o.userId})).filter(o=>o!==null)}addImage(t,e){const o=new FileReader;if(o.onloadend=()=>{const r=o.result,i={id:0,initiativeId:t,data:r,isDeleted:!1};return this.mediaModelRepository.create(i)},e)o.readAsDataURL(e);else return null}getImages(t){return this.mediaModelRepository.all({initiativeId:t})}deleteImage(t){return this.mediaModelRepository.delete(t)}async loginWithGoogle(){const t=new m,e=I(),r=(await k(e,t)).user;if(!r)return null;if(!r.email)throw new Error("User email not found.");const i=this.usersRepository.find({email:r.email});if(i)return i;const n=Math.random().toString(36).substring(7),s={id:0,email:r.email,name:r.displayName||"",role:"worker",jobId:0,isDeleted:!1,password:n,photoUrl:r.photoURL||""};return this.usersRepository.create(s)}}export{j as I};
